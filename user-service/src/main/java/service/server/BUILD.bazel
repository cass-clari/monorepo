load("@rules_proto_grpc//java:defs.bzl", "java_grpc_library")
load("@rules_oci//oci:defs.bzl", "oci_image", "oci_push")
load("@rules_pkg//:pkg.bzl", "pkg_tar")
#load("//:push-modes.bzl", "push_mode")

pkg_tar(
    name = "tar",
    # Bring the java_binary
    srcs = ["server_deploy.jar"],
    include_runfiles = True,
    strip_prefix = ".",
)

oci_image(
    name = "image",
    base = "@distroless_java",
    entrypoint = [
        "java",
        "-jar",
        "server_deploy.jar",
    ],
    tars = [":tar"],
)

#push_mode(
#    name = "push_mode",
#    build_setting_default = "DEV",
#)
#
#config_setting(
#    name = "push_mode_dev",
#    flag_values = {
#        ":push_mode": "DEV",
#    },
#)
#
#config_setting(
#    name = "push_mode_integration",
#    flag_values = {
#        ":push_mode": "INTEGRATION",
#    },
#)
#
#config_setting(
#    name = "push_mode_prod",
#    flag_values = {
#        ":push_mode": "PROD",
#    },
#)

oci_push(
    name = "push-image-dev",
    #    args = ["-v"],
    image = ":image",
    remote_tags = [
        "dev",
    ],
    repository = "091232730366.dkr.ecr.us-west-2.amazonaws.com/user-service",
)

oci_push(
    name = "push-image-integration",
    #    args = ["-v"],
    image = ":image",
    remote_tags = [
        "integration",
    ],
    repository = "091232730366.dkr.ecr.us-west-2.amazonaws.com/user-service",
)

oci_push(
    name = "push-image-prod",
    #    args = ["-v"],
    image = ":image",
    remote_tags = [
        "prod",
    ],
    repository = "091232730366.dkr.ecr.us-west-2.amazonaws.com/user-service",
)

#oci_push(
#    name = "push-image",
#    #    args = ["-v"],
#    image = ":image",
#    remote_tags = [
#        "dev",
#    ],
#    repository = "091232730366.dkr.ecr.us-west-2.amazonaws.com/user-service",
#)

java_binary(
    name = "server",
    srcs = glob([
        "*.java",
    ]),
    main_class = "service.server.UserServiceServer",
    resource_strip_prefix = "user-service/src/main/java/service/server",
    resources = [
        "//user-service/src/main/java/service/server:resources",
    ],
    visibility = [
        "//user-service/src/test/java/L0/service/server:__pkg__",
        "//user-service/src/test/java/L1/service/server:__pkg__",
        "//user-service/src/test/java/L2/service/server:__pkg__",
        "//user-service/src/test/java/common:__pkg__",
    ],
    deps = [
        ":server-lib",
        ":user_service_java_grpc",
        "//third_party:grpc",
        "//third_party:postgres",
        "//third_party:snake-yaml",
        "//third_party:spring-beans-core-context",
    ],
)

filegroup(
    name = "resources",
    srcs = [
        "application.yml",
    ],
)

java_library(
    name = "server-lib",
    srcs = glob([
        "*.java",
    ]),
    visibility = [
        "//user-service/src/test/java/L0/service/server:__pkg__",
        "//user-service/src/test/java/L1/service/server:__pkg__",
        "//user-service/src/test/java/L2/service/server:__pkg__",
        "//user-service/src/test/java/common:__pkg__",
    ],
    deps = [
        ":user_service_java_grpc",
        "//third_party:grpc",
        "//third_party:postgres",
        "//third_party:spring-beans-core-context",
    ],
)

java_grpc_library(
    name = "user_service_java_grpc",
    protos = [
        "//protos/user:email_address_proto",
        "//protos/user:user_proto",
        "//user-service/src/main/protos",
    ],
    visibility = [
        "//user-service/src/main/java/service/client:__pkg__",
        "//user-service/src/test/java/L0/service/server:__pkg__",
        "//user-service/src/test/java/L1/service/server:__pkg__",
        "//user-service/src/test/java/L2/service/server:__pkg__",
        "//user-service/src/test/java/common:__pkg__",
    ],
)
